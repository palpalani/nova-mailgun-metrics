name: Security & Quality

on: [push, pull_request]

env:
  COMPOSER_NO_INTERACTION: 1
  COMPOSER_MEMORY_LIMIT: -1

jobs:
  security:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    name: Security & Quality Checks

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v3
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-8.3-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Run Composer security audit
        run: composer audit --format=json --no-interaction

      - name: Run Psalm static analysis
        run: vendor/bin/psalm --output-format=json --no-progress

      - name: Check for outdated dependencies
        run: composer outdated --format=json --no-interaction

      - name: Run PHPStan (if available)
        run: |
          if [ -f "vendor/bin/phpstan" ]; then
            vendor/bin/phpstan analyse src tests --no-progress --error-format=json
          else
            echo "PHPStan not available, skipping..."
          fi

  code-quality:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v3
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-8.3-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php-8.3-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction

      - name: Check code style with PHP CS Fixer (if available)
        run: |
          if [ -f "vendor/bin/php-cs-fixer" ]; then
            vendor/bin/php-cs-fixer fix --dry-run --diff --format=json
          else
            echo "PHP CS Fixer not available, skipping..."
          fi

      - name: Validate composer.json
        run: composer validate --strict

      - name: Check for unused dependencies
        run: composer check-platform-reqs 